{"ast":null,"code":"var _jsxFileName = \"/Users/vibhormechu/Downloads/NYC-WIFI-PROJECT/nyc-wifi-hotspots/src/components/MapView.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { GoogleMap, LoadScript } from '@react-google-maps/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst containerStyle = {\n  width: '100%',\n  height: '400px'\n};\nconst center = {\n  lat: 40.7128,\n  lng: -74.0060 // Coordinates for New York City\n};\n\nfunction MapView() {\n  _s();\n  const [hotspots, setHotspots] = useState([]);\n  const apiKey = process.env.REACT_APP_GOOGLE_MAPS_API_KEY;\n  useEffect(() => {\n    fetch('/hotspots.json').then(response => response.json()).then(data => setHotspots(data));\n  }, []);\n\n  // function MapView() {\n  // const apiKey = process.env.REACT_APP_GOOGLE_MAPS_API_KEY;\n\n  return /*#__PURE__*/_jsxDEV(LoadScript, {\n    googleMapsApiKey: apiKey,\n    children: /*#__PURE__*/_jsxDEV(GoogleMap, {\n      mapContainerClassName: \"GoogleMap\",\n      mapContainerStyle: containerStyle,\n      center: center,\n      zoom: 10,\n      children: hotspots.map((hotspot, index) => /*#__PURE__*/_jsxDEV(Marker, {\n        position: {\n          lat: hotspot.Latitude,\n          lng: hotspot.Longitude\n        },\n        onClick: () => handleMarkerClick(hotspot)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n}\n_s(MapView, \"PHEx3bphZHpnBgPjZuFO/+chfbw=\");\n_c = MapView;\nfunction handleMarkerClick(hotspot) {\n  console.log(\"Clicked hotspot:\", hotspot.Name);\n  // Here you can open a modal or form to submit a review\n}\n\nexport default MapView;\nvar _c;\n$RefreshReg$(_c, \"MapView\");","map":{"version":3,"names":["React","GoogleMap","LoadScript","jsxDEV","_jsxDEV","containerStyle","width","height","center","lat","lng","MapView","_s","hotspots","setHotspots","useState","apiKey","process","env","REACT_APP_GOOGLE_MAPS_API_KEY","useEffect","fetch","then","response","json","data","googleMapsApiKey","children","mapContainerClassName","mapContainerStyle","zoom","map","hotspot","index","Marker","position","Latitude","Longitude","onClick","handleMarkerClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","console","log","Name","$RefreshReg$"],"sources":["/Users/vibhormechu/Downloads/NYC-WIFI-PROJECT/nyc-wifi-hotspots/src/components/MapView.js"],"sourcesContent":["import React from 'react';\nimport { GoogleMap, LoadScript } from '@react-google-maps/api';\n\nconst containerStyle = {\n    width: '100%',\n    height: '400px'\n};\n\nconst center = {\n    lat: 40.7128,\n    lng: -74.0060 // Coordinates for New York City\n};\n\nfunction MapView() {\n    const [hotspots, setHotspots] = useState([]);\n    const apiKey = process.env.REACT_APP_GOOGLE_MAPS_API_KEY;\n\n    useEffect(() => {\n        fetch('/hotspots.json')\n            .then(response => response.json())\n            .then(data => setHotspots(data));\n    }, []);\n\n// function MapView() {\n    // const apiKey = process.env.REACT_APP_GOOGLE_MAPS_API_KEY;\n\n    return (\n        <LoadScript googleMapsApiKey={apiKey}>\n            <GoogleMap\n                mapContainerClassName=\"GoogleMap\"\n                mapContainerStyle={containerStyle}\n                center={center}\n                zoom={10}\n            >\n                {hotspots.map((hotspot, index) => (\n                    <Marker\n                        key={index}\n                        position={{ lat: hotspot.Latitude, lng: hotspot.Longitude }}\n                        onClick={() => handleMarkerClick(hotspot)}\n                    />\n                ))}\n            </GoogleMap>\n        </LoadScript>\n    )\n}\nfunction handleMarkerClick(hotspot) {\n    console.log(\"Clicked hotspot:\", hotspot.Name);\n    // Here you can open a modal or form to submit a review\n}\n\n\n\nexport default MapView;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,EAAEC,UAAU,QAAQ,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/D,MAAMC,cAAc,GAAG;EACnBC,KAAK,EAAE,MAAM;EACbC,MAAM,EAAE;AACZ,CAAC;AAED,MAAMC,MAAM,GAAG;EACXC,GAAG,EAAE,OAAO;EACZC,GAAG,EAAE,CAAC,OAAO,CAAC;AAClB,CAAC;;AAED,SAASC,OAAOA,CAAA,EAAG;EAAAC,EAAA;EACf,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGC,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAMC,MAAM,GAAGC,OAAO,CAACC,GAAG,CAACC,6BAA6B;EAExDC,SAAS,CAAC,MAAM;IACZC,KAAK,CAAC,gBAAgB,CAAC,CAClBC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAIX,WAAW,CAACW,IAAI,CAAC,CAAC;EACxC,CAAC,EAAE,EAAE,CAAC;;EAEV;EACI;;EAEA,oBACIrB,OAAA,CAACF,UAAU;IAACwB,gBAAgB,EAAEV,MAAO;IAAAW,QAAA,eACjCvB,OAAA,CAACH,SAAS;MACN2B,qBAAqB,EAAC,WAAW;MACjCC,iBAAiB,EAAExB,cAAe;MAClCG,MAAM,EAAEA,MAAO;MACfsB,IAAI,EAAE,EAAG;MAAAH,QAAA,EAERd,QAAQ,CAACkB,GAAG,CAAC,CAACC,OAAO,EAAEC,KAAK,kBACzB7B,OAAA,CAAC8B,MAAM;QAEHC,QAAQ,EAAE;UAAE1B,GAAG,EAAEuB,OAAO,CAACI,QAAQ;UAAE1B,GAAG,EAAEsB,OAAO,CAACK;QAAU,CAAE;QAC5DC,OAAO,EAAEA,CAAA,KAAMC,iBAAiB,CAACP,OAAO;MAAE,GAFrCC,KAAK;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGb,CACJ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACK;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAErB;AAAC/B,EAAA,CA/BQD,OAAO;AAAAiC,EAAA,GAAPjC,OAAO;AAgChB,SAAS4B,iBAAiBA,CAACP,OAAO,EAAE;EAChCa,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEd,OAAO,CAACe,IAAI,CAAC;EAC7C;AACJ;;AAIA,eAAepC,OAAO;AAAC,IAAAiC,EAAA;AAAAI,YAAA,CAAAJ,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}